name: "Nightly Example Runs"

on:
  schedule:
    - cron: '30 8 * * *'  # Runs daily at 08:30 UTC
  workflow_dispatch:

jobs:
  dev:
    name: "Dev | Python ${{ matrix.python_version }}"
    strategy:
      matrix:
        python_version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - notebook_dir: 'quickstart'
            notebook_file: 'main.ipynb'
    uses: ./.github/workflows/run-example.yml
    with:
      notebook_dir: ${{ matrix.notebook_dir }}
      notebook_file: ${{ matrix.notebook_file }}
      python_version: ${{ matrix.python_version }}
      environment: dev
      runs_on: dbnlai-dev
      branch: dev
      package_spec: dbnl@git+ssh://git@github.com/dbnlAI/dbnl-sdk.git@main
    secrets: inherit
    concurrency:
      group: dev-${{ matrix.python_version }}-${{ matrix.notebook_dir }}/${{ matrix.notebook_file }}
      cancel-in-progress: true

  staging:
    name: "Staging | Python ${{ matrix.python_version }}"
    strategy:
      matrix:
        python_version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - notebook_dir: 'quickstart'
            notebook_file: 'main.ipynb'
    uses: ./.github/workflows/run-example.yml
    with:
      notebook_dir: ${{ matrix.notebook_dir }}
      notebook_file: ${{ matrix.notebook_file }}
      python_version: ${{ matrix.python_version }}
      environment: staging
      runs_on: dbnlai-staging
      branch: release-0.22
      package_spec: dbnl@git+ssh://git@github.com/dbnlAI/dbnl-sdk.git@release-0.22
    secrets: inherit
    concurrency:
      group: staging-${{ matrix.python_version }}-${{ matrix.notebook_dir }}/${{ matrix.notebook_file }}
      cancel-in-progress: true

  prod:
    name: "Prod | Python ${{ matrix.python_version }}"
    strategy:
      matrix:
        python_version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - notebook_dir: 'quickstart'
            notebook_file: 'main.ipynb'
    uses: ./.github/workflows/run-example.yml
    with:
      notebook_dir: ${{ matrix.notebook_dir }}
      notebook_file: ${{ matrix.notebook_file }}
      python_version: ${{ matrix.python_version }}
      environment: prod
      runs_on: ubuntu-latest
      branch: main
      package_spec: dbnl@git+ssh://git@github.com/dbnlAI/dbnl-sdk.git@release-0.22
    secrets: inherit
    concurrency:
      group: prod-${{ matrix.python_version }}-${{ matrix.notebook_dir }}/${{ matrix.notebook_file }}
      cancel-in-progress: true

  notify:
    runs-on: ubuntu-latest
    needs: [dev, staging, prod]
    steps:
    - name: Slack a Cron Failure
      if: always()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        SLACK_CHANNEL: ${{ secrets.EXAMPLES_ALERTS_SLACK_CHANNEL_ID }}
        ACTIONS_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        BRANCH: ${{ inputs.branch }}
      run: |
        echo "Preparing Slack notification..."
        DEV_RESULT="${{ needs.dev.result }}"
        STAGING_RESULT="${{ needs.staging.result }}"
        PROD_RESULT="${{ needs.prod.result }}"

        FAILED_ENVS=""

        if [[ "$DEV_RESULT" == "failure" ]]; then
          FAILED_ENVS+=" dev"
        fi
        if [[ "$STAGING_RESULT" == "failure" ]]; then
          FAILED_ENVS+=" staging"
        fi
        if [[ "$PROD_RESULT" == "failure" ]]; then
          FAILED_ENVS+=" prod"
        fi

        if [[ -n "$FAILED_ENVS" ]]; then
          curl -X POST -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" \
          -H "Content-type: application/json; charset=utf-8" \
          --data '{"channel":"'"${SLACK_CHANNEL}"'","text":"Failed *Environment(s): '"${FAILED_ENVS}"'\n*Branch*: '"${BRANCH}"'\n*URL*: '"${ACTIONS_URL}"'"}' \
          https://slack.com/api/chat.postMessage
        fi
